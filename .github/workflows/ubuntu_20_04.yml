#
# Copyright (C) 2025 Badabing2005
# SPDX-FileCopyrightText: 2025 Badabing2005
# SPDX-License-Identifier: AGPL-3.0-or-later
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
# for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# Also add information on how to contact you by electronic and paper mail.
#
# If your software can interact with users remotely through a computer network,
# you should also make sure that it provides a way for users to get its source.
# For example, if your program is a web application, its interface could
# display a "Source" link that leads users to an archive of the code. There are
# many ways you could offer source, and different solutions will be better for
# different programs; see section 13 for the specific requirements.
#
# You should also get your employer (if you work as a programmer) or school, if
# any, to sign a "copyright disclaimer" for the program, if necessary. For more
# information on this, and how to apply and follow the GNU AGPL, see
# <https://www.gnu.org/licenses/>.

name: Build for Ubuntu 20.04

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Build tags'

jobs:
  build_ubuntu_20_04:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        run: |
          sudo apt update
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt update
          sudo apt install -y python3.13
          sudo apt install -y python3.13-venv
          sudo apt install -y python3-pip
          python3.13 --version

      - name: Install wxPython prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y python3.13-dev
          sudo apt-get install -y libgtk-3-dev
          sudo apt-get install -y libunwind-dev
          sudo apt-get install -y libgstreamer1.0-dev
          sudo apt-get install -y gstreamer1.0-plugins-base
          sudo apt-get install -y freeglut3-dev
          sudo apt-get install -y libwebkit2gtk-4.0-dev
          sudo apt-get install -y libjpeg-dev
          sudo apt-get install -y libpng-dev
          sudo apt-get install -y libtiff-dev
          sudo apt-get install -y libsdl2-dev
          sudo apt-get install -y libnotify-dev
          sudo apt-get install -y libsm-dev

      - name: Create virtual environment, install dependencies, and build
        run: |
          python3.13 -m venv myenv
          . myenv/bin/activate
          python --version
          pip install -U pip
          pip install -U six wheel setuptools
          # Try wxPython 4.2.2 wheel, then 4.2.1 wheel, finally fallback to source if both fail
          pip install --only-binary wxPython -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04 wxPython==4.2.2 || \
          pip install --only-binary wxPython -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04 wxPython==4.2.1 || \
          pip install -U -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04 wxPython
          pip install -r requirements.txt
          python --version && pip freeze
          ./build.sh
          mv dist/PixelFlasher dist/PixelFlasher_Ubuntu_20_04
          sha256sum dist/PixelFlasher_Ubuntu_20_04 > dist/PixelFlasher_Ubuntu_20_04.sha256
          cat dist/PixelFlasher_Ubuntu_20_04.sha256
          ls dist
        shell: bash

      # Upload artifacts Ubuntu 20.04
      - name: Upload Ubuntu 20.04 Artifact
        uses: actions/upload-artifact@v4
        id: upload_artifacts_ubuntu_20_04
        with:
          name: PixelFlasher_Ubuntu_20_04 Artifacts
          path: |
            dist/PixelFlasher_Ubuntu_20_04
            dist/PixelFlasher_Ubuntu_20_04.sha256
