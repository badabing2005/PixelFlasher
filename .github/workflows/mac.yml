#
# Copyright (C) 2025 Badabing2005
# SPDX-FileCopyrightText: 2025 Badabing2005
# SPDX-License-Identifier: AGPL-3.0-or-later
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
# for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# Also add information on how to contact you by electronic and paper mail.
#
# If your software can interact with users remotely through a computer network,
# you should also make sure that it provides a way for users to get its source.
# For example, if your program is a web application, its interface could
# display a "Source" link that leads users to an archive of the code. There are
# many ways you could offer source, and different solutions will be better for
# different programs; see section 13 for the specific requirements.
#
# You should also get your employer (if you work as a programmer) or school, if
# any, to sign a "copyright disclaimer" for the program, if necessary. For more
# information on this, and how to apply and follow the GNU AGPL, see
# <https://www.gnu.org/licenses/>.

name: Build for macOS 11+

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Build tags'

jobs:
  build_mac:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List Cellar directory
        run: ls /opt/homebrew/Cellar

      - name: Updating Homebrew Packages
        run : |
          brew upgrade
          brew remove openssl@1.1
          # # Clean up openssl@1.1 configuration files
          # rm -rf /opt/homebrew/etc/openssl@1.1

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install wxPython
        run: pip install wxPython

      - name: Install node
        run: brew install node

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install ImageMagick
        run: brew install imagemagick

      - name: Install create-dmg
        run: |
          npm cache clean --force
          npm install --global create-dmg
          # Check if 'util.isDate' is patched
          if grep -q "util.isDate" "$(npm root -g)/create-dmg/node_modules/macos-alias/lib/encode.js"; then
            echo "Patching util.isDate..."
            sed -i.bak "s/util.isDate/((val) => Object.prototype.toString.call(val) === '[object Date]')/g" \
              "$(npm root -g)/create-dmg/node_modules/macos-alias/lib/encode.js"
          fi

      - name: Add Python 3.13 to PATH
        run: export PATH=/opt/homebrew/Cellar/python@3.13/bin:$PATH

      - name: Create virtual environment
        run: python3.13 -m venv myenv
        shell: bash

      - name: Activate virtual environment
        run: source myenv/bin/activate
        shell: bash

      - name: Install requirements
        run: PYLZ4_USE_SYSTEM_LZ4="False" ARCHFLAGS="-arch x86_64 -arch arm64" python3.13 -m pip install --no-binary 'bsdiff4,psutil,PyYAML,MarkupSafe,cffi,lz4' -r requirements.txt

      - name: List modules and their versions
        run: python3.13 -m pip freeze

      - name: Build application
        id: build_app
        run: ./build.sh

      - name: Upload PixelFlasher.app as artifact
        uses: actions/upload-artifact@v4
        with:
          name: PixelFlasher.app for macOS 11+
          path: dist/PixelFlasher.app

      - name: Rename the file names
        run: mv dist/PixelFlasher.dmg "dist/PixelFlasher_MacOS.dmg"

      - name: Get sha256
        run: |
          shasum -a 256 "dist/PixelFlasher_MacOS.dmg" > "dist/PixelFlasher_MacOS.dmg.sha256"
          cat "dist/PixelFlasher_MacOS.dmg.sha256"

      - name: List contents of dist directory
        run: ls ./ dist/

      - name: Upload macOS 11+ Artifact
        uses: actions/upload-artifact@v4
        id: upload_artifact_macos
        with:
          name: PixelFlasher_MacOS.dmg Artifacts
          path: |
            dist/PixelFlasher_MacOS.dmg
            dist/PixelFlasher_MacOS.dmg.sha256
