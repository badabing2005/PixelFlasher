#
# Copyright (C) 2025 Badabing2005
# SPDX-FileCopyrightText: 2025 Badabing2005
# SPDX-License-Identifier: AGPL-3.0-or-later
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the Free
# Software Foundation, either version 3 of the License, or (at your option) any
# later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License
# for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#
# Also add information on how to contact you by electronic and paper mail.
#
# If your software can interact with users remotely through a computer network,
# you should also make sure that it provides a way for users to get its source.
# For example, if your program is a web application, its interface could
# display a "Source" link that leads users to an archive of the code. There are
# many ways you could offer source, and different solutions will be better for
# different programs; see section 13 for the specific requirements.
#
# You should also get your employer (if you work as a programmer) or school, if
# any, to sign a "copyright disclaimer" for the program, if necessary. For more
# information on this, and how to apply and follow the GNU AGPL, see
# <https://www.gnu.org/licenses/>.

name: Build for All platforms

env:
  ACTIONS_RUNTIME_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Controls when the workflow will run
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tags:
        description: 'Build tags'

jobs:
  build_windows:
    uses: ./.github/workflows/windows.yml
    secrets: inherit

  build_windows_arm64:
    uses: ./.github/workflows/windows-arm64.yml
    secrets: inherit

  build_windows_2019:
    uses: ./.github/workflows/windows_2019.yml
    secrets: inherit

  build_ubuntu_20_04:
    uses: ./.github/workflows/ubuntu_20_04.yml
    secrets: inherit

  build_ubuntu_22_04:
    uses: ./.github/workflows/ubuntu_22_04.yml
    secrets: inherit

  build_ubuntu_24_04:
    uses: ./.github/workflows/ubuntu_24_04.yml
    secrets: inherit

  build_mac_old:
    uses: ./.github/workflows/mac_old.yml
    secrets: inherit

  build_mac:
    uses: ./.github/workflows/mac.yml
    secrets: inherit

  deploy:
    needs: [build_windows, build_windows_arm64, build_windows_2019, build_ubuntu_20_04, build_ubuntu_22_04, build_ubuntu_24_04, build_mac_old, build_mac]

    runs-on: ubuntu-latest

    steps:
      # Get version
      - name: Get version from tag
        id: get_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
              version=${GITHUB_REF#refs/tags/v}
          else
              version=0.0.0.${GITHUB_REF#refs/heads/}
          fi
          echo "version=${version}" >> "${GITHUB_OUTPUT}"

      # Download the Windows artifact from the build_windows job
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: PixelFlasher.exe Artifacts
          path: release
        continue-on-error: true

      # Download the Windows arm64 artifact from the build_windows_arm64 job
      - name: Download Windows arm64 Artifact
        uses: actions/download-artifact@v4
        with:
          name: PixelFlasher-ARM64.exe Artifacts
          path: release
        continue-on-error: true

      # Download the Windows-2019 artifact from the build_windows_2019 job
      - name: Download Windows-2019 Artifact
        uses: actions/download-artifact@v4
        with:
          name: PixelFlasher_Win_2019.exe Artifacts
          path: release
        continue-on-error: true

      # Download the Ubuntu_20_04 artifact from the build_ubuntu_20_04 job
      - name: Download Ubuntu_20_04 Artifact
        uses: actions/download-artifact@v4
        with:
          name: PixelFlasher_Ubuntu_20_04 Artifacts
          path: release
        continue-on-error: true

      # Download the Ubuntu_22_04 artifact from the build_ubuntu_22_04 job
      - name: Download Ubuntu_22_04 Artifact
        uses: actions/download-artifact@v4
        with:
          name: PixelFlasher_Ubuntu_22_04 Artifacts
          path: release
        continue-on-error: true

      # Download the Ubuntu_24_04 artifact from the build_ubuntu_24_04 job
      - name: Download Ubuntu_24_04 Artifact
        uses: actions/download-artifact@v4
        with:
          name: PixelFlasher_Ubuntu_24_04 Artifacts
          path: release
        continue-on-error: true

      - name: Download macOS Artifacts for Older macOS Versions
        uses: actions/download-artifact@v4
        with:
          name: PixelFlasher_MacOS_legacy.dmg Artifacts
          path: release
        continue-on-error: true

      # Download the macOS artifacts from the build_mac job
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: PixelFlasher_MacOS.dmg Artifacts
          path: release
        continue-on-error: true

      # List the artifacts downloaded
      - name: List contents of dist directory
        run: ls ${{ github.workspace }}/release*

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          # body_path: RELEASE.md
          body: |

            ## Which file to download?
            A description of the various artifacts is in the [README](https://github.com/badabing2005/PixelFlasher#release-files)
          draft: true
          prerelease: false
          files: |
            release/*
        continue-on-error: true
